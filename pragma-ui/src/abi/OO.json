[
  {
    "type": "impl",
    "name": "Upgradeable",
    "interface_name": "openzeppelin::upgrades::interface::IUpgradeable"
  },
  {
    "type": "interface",
    "name": "openzeppelin::upgrades::interface::IUpgradeable",
    "items": [
      {
        "type": "function",
        "name": "upgrade",
        "inputs": [
          {
            "name": "new_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "IOptimisticOracleImpl",
    "interface_name": "optimistic_oracle::contracts::interfaces::IOptimisticOracle"
  },
  {
    "type": "struct",
    "name": "core::byte_array::ByteArray",
    "members": [
      {
        "name": "data",
        "type": "core::array::Array::<core::bytes_31::bytes31>"
      },
      {
        "name": "pending_word",
        "type": "core::felt252"
      },
      {
        "name": "pending_word_len",
        "type": "core::integer::u32"
      }
    ]
  },
  {
    "type": "struct",
    "name": "openzeppelin::token::erc20::interface::ERC20ABIDispatcher",
    "members": [
      {
        "name": "contract_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "optimistic_oracle::contracts::interfaces::EscalationManagerSettings",
    "members": [
      {
        "name": "arbitrate_via_escalation_manager",
        "type": "core::bool"
      },
      {
        "name": "discard_oracle",
        "type": "core::bool"
      },
      {
        "name": "validate_disputers",
        "type": "core::bool"
      },
      {
        "name": "asserting_caller",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "escalation_manager",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "struct",
    "name": "optimistic_oracle::contracts::interfaces::Assertion",
    "members": [
      {
        "name": "escalation_manager_settings",
        "type": "optimistic_oracle::contracts::interfaces::EscalationManagerSettings"
      },
      {
        "name": "asserter",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "assertion_time",
        "type": "core::integer::u64"
      },
      {
        "name": "settled",
        "type": "core::bool"
      },
      {
        "name": "currency",
        "type": "openzeppelin::token::erc20::interface::ERC20ABIDispatcher"
      },
      {
        "name": "expiration_time",
        "type": "core::integer::u64"
      },
      {
        "name": "settlement_resolution",
        "type": "core::bool"
      },
      {
        "name": "domain_id",
        "type": "core::integer::u256"
      },
      {
        "name": "identifier",
        "type": "core::felt252"
      },
      {
        "name": "bond",
        "type": "core::integer::u256"
      },
      {
        "name": "callback_recipient",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "disputer",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "interface",
    "name": "optimistic_oracle::contracts::interfaces::IOptimisticOracle",
    "items": [
      {
        "type": "function",
        "name": "assert_truth_with_defaults",
        "inputs": [
          {
            "name": "claim",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "asserter",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "assert_truth",
        "inputs": [
          {
            "name": "claim",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "asserter",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "callback_recipient",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "escalation_manager",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "liveness",
            "type": "core::integer::u64"
          },
          {
            "name": "currency",
            "type": "openzeppelin::token::erc20::interface::ERC20ABIDispatcher"
          },
          {
            "name": "bond",
            "type": "core::integer::u256"
          },
          {
            "name": "identifier",
            "type": "core::felt252"
          },
          {
            "name": "domain_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "dispute_assertion",
        "inputs": [
          {
            "name": "assertion_id",
            "type": "core::felt252"
          },
          {
            "name": "disputer",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "settle_assertion",
        "inputs": [
          {
            "name": "assertion_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_minimum_bond",
        "inputs": [
          {
            "name": "currency",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "stamp_assertion",
        "inputs": [
          {
            "name": "assertion_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "core::byte_array::ByteArray"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "default_identifier",
        "inputs": [],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_assertion",
        "inputs": [
          {
            "name": "assertion_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "optimistic_oracle::contracts::interfaces::Assertion"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "sync_params",
        "inputs": [
          {
            "name": "identifier",
            "type": "core::felt252"
          },
          {
            "name": "currency",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "settle_and_get_assertion_result",
        "inputs": [
          {
            "name": "assertion_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_assertion_result",
        "inputs": [
          {
            "name": "assertion_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "set_admin_properties",
        "inputs": [
          {
            "name": "default_currency",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "default_liveness",
            "type": "core::integer::u64"
          },
          {
            "name": "burned_bond_percentage",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "OwnableImpl",
    "interface_name": "openzeppelin::access::ownable::interface::IOwnable"
  },
  {
    "type": "interface",
    "name": "openzeppelin::access::ownable::interface::IOwnable",
    "items": [
      {
        "type": "function",
        "name": "owner",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "transfer_ownership",
        "inputs": [
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounce_ownership",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "finder",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "default_currency",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "default_liveness",
        "type": "core::integer::u64"
      },
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "event",
    "name": "optimistic_oracle::contracts::optimistic_oracle_v1::optimistic_oracle_v1::AdminPropertiesSet",
    "kind": "struct",
    "members": [
      {
        "name": "default_currency",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "default_liveness",
        "type": "core::integer::u64",
        "kind": "data"
      },
      {
        "name": "burned_bond_percentage",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "optimistic_oracle::contracts::optimistic_oracle_v1::optimistic_oracle_v1::AssertionSettled",
    "kind": "struct",
    "members": [
      {
        "name": "assertion_id",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "bond_recipient",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "disputed",
        "type": "core::bool",
        "kind": "data"
      },
      {
        "name": "settlement_resolution",
        "type": "core::bool",
        "kind": "data"
      },
      {
        "name": "settle_caller",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "optimistic_oracle::contracts::optimistic_oracle_v1::optimistic_oracle_v1::AssertionMade",
    "kind": "struct",
    "members": [
      {
        "name": "assertion_id",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "domain_id",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "claim",
        "type": "core::byte_array::ByteArray",
        "kind": "data"
      },
      {
        "name": "asserter",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "callback_recipient",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "escalation_manager",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "caller",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "expiration_timestamp",
        "type": "core::integer::u64",
        "kind": "data"
      },
      {
        "name": "currency",
        "type": "openzeppelin::token::erc20::interface::ERC20ABIDispatcher",
        "kind": "data"
      },
      {
        "name": "bond",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "identifier",
        "type": "core::felt252",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "optimistic_oracle::contracts::optimistic_oracle_v1::optimistic_oracle_v1::AssertionDisputed",
    "kind": "struct",
    "members": [
      {
        "name": "assertion_id",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "caller",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "disputer",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "request_id",
        "type": "core::felt252",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
    "kind": "struct",
    "members": [
      {
        "name": "class_hash",
        "type": "core::starknet::class_hash::ClassHash",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "Upgraded",
        "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
    "kind": "struct",
    "members": [
      {
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
    "kind": "struct",
    "members": [
      {
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "OwnershipTransferred",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
        "kind": "nested"
      },
      {
        "name": "OwnershipTransferStarted",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
    "kind": "enum",
    "variants": []
  },
  {
    "type": "event",
    "name": "optimistic_oracle::contracts::optimistic_oracle_v1::optimistic_oracle_v1::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "AdminPropertiesSet",
        "type": "optimistic_oracle::contracts::optimistic_oracle_v1::optimistic_oracle_v1::AdminPropertiesSet",
        "kind": "nested"
      },
      {
        "name": "AssertionSettled",
        "type": "optimistic_oracle::contracts::optimistic_oracle_v1::optimistic_oracle_v1::AssertionSettled",
        "kind": "nested"
      },
      {
        "name": "AssertionMade",
        "type": "optimistic_oracle::contracts::optimistic_oracle_v1::optimistic_oracle_v1::AssertionMade",
        "kind": "nested"
      },
      {
        "name": "AssertionDisputed",
        "type": "optimistic_oracle::contracts::optimistic_oracle_v1::optimistic_oracle_v1::AssertionDisputed",
        "kind": "nested"
      },
      {
        "name": "UpgradeableEvent",
        "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
        "kind": "flat"
      },
      {
        "name": "OwnableEvent",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
        "kind": "flat"
      },
      {
        "name": "ReentrancyGuardEvent",
        "type": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
        "kind": "flat"
      }
    ]
  }
] 