[
  {
    "type": "impl",
    "name": "Upgradeable",
    "interface_name": "openzeppelin::upgrades::interface::IUpgradeable"
  },
  {
    "type": "interface",
    "name": "openzeppelin::upgrades::interface::IUpgradeable",
    "items": [
      {
        "type": "function",
        "name": "upgrade",
        "inputs": [
          {
            "name": "new_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "IMockOracleAncillaryImpl",
    "interface_name": "optimistic_oracle::contracts::interfaces::IOracleAncillary"
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::byte_array::ByteArray",
    "members": [
      {
        "name": "data",
        "type": "core::array::Array::<core::bytes_31::bytes31>"
      },
      {
        "name": "pending_word",
        "type": "core::felt252"
      },
      {
        "name": "pending_word_len",
        "type": "core::integer::u32"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "type": "interface",
    "name": "optimistic_oracle::contracts::interfaces::IOracleAncillary",
    "items": [
      {
        "type": "function",
        "name": "request_price",
        "inputs": [
          {
            "name": "identifier",
            "type": "core::felt252"
          },
          {
            "name": "time",
            "type": "core::integer::u256"
          },
          {
            "name": "ancillary_data",
            "type": "core::byte_array::ByteArray"
          }
        ],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "has_price",
        "inputs": [
          {
            "name": "identifier",
            "type": "core::felt252"
          },
          {
            "name": "time",
            "type": "core::integer::u256"
          },
          {
            "name": "ancillary_data",
            "type": "core::byte_array::ByteArray"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_price",
        "inputs": [
          {
            "name": "identifier",
            "type": "core::felt252"
          },
          {
            "name": "time",
            "type": "core::integer::u256"
          },
          {
            "name": "ancillary_data",
            "type": "core::byte_array::ByteArray"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      }
    ]
  },
  {
    "type": "impl",
    "name": "IMockOracleAncillaryConfigurationImpl",
    "interface_name": "optimistic_oracle::contracts::interfaces::IMockOracleAncillaryConfiguration"
  },
  {
    "type": "struct",
    "name": "optimistic_oracle::contracts::interfaces::IIdentifierWhitelistDispatcher",
    "members": [
      {
        "name": "contract_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "struct",
    "name": "optimistic_oracle::contracts::mocks::oracle_ancillary::mock_oracle_ancillary::QueryPoint",
    "members": [
      {
        "name": "identifier",
        "type": "core::felt252"
      },
      {
        "name": "time",
        "type": "core::integer::u256"
      },
      {
        "name": "ancillary_data",
        "type": "core::byte_array::ByteArray"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::array::Span::<optimistic_oracle::contracts::mocks::oracle_ancillary::mock_oracle_ancillary::QueryPoint>",
    "members": [
      {
        "name": "snapshot",
        "type": "@core::array::Array::<optimistic_oracle::contracts::mocks::oracle_ancillary::mock_oracle_ancillary::QueryPoint>"
      }
    ]
  },
  {
    "type": "interface",
    "name": "optimistic_oracle::contracts::interfaces::IMockOracleAncillaryConfiguration",
    "items": [
      {
        "type": "function",
        "name": "get_identifier_whitelist",
        "inputs": [],
        "outputs": [
          {
            "type": "optimistic_oracle::contracts::interfaces::IIdentifierWhitelistDispatcher"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "push_price",
        "inputs": [
          {
            "name": "identifier",
            "type": "core::felt252"
          },
          {
            "name": "time",
            "type": "core::integer::u256"
          },
          {
            "name": "ancillary_data",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "price",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "push_price_by_request_id",
        "inputs": [
          {
            "name": "request_id",
            "type": "core::felt252"
          },
          {
            "name": "price",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_pending_queries",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Span::<optimistic_oracle::contracts::mocks::oracle_ancillary::mock_oracle_ancillary::QueryPoint>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_request_parameters",
        "inputs": [
          {
            "name": "request_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "optimistic_oracle::contracts::mocks::oracle_ancillary::mock_oracle_ancillary::QueryPoint"
          }
        ],
        "state_mutability": "view"
      }
    ]
  },
  {
    "type": "impl",
    "name": "OwnableImpl",
    "interface_name": "openzeppelin::access::ownable::interface::IOwnable"
  },
  {
    "type": "interface",
    "name": "openzeppelin::access::ownable::interface::IOwnable",
    "items": [
      {
        "type": "function",
        "name": "owner",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "transfer_ownership",
        "inputs": [
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounce_ownership",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "finder",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "event",
    "name": "optimistic_oracle::contracts::mocks::oracle_ancillary::mock_oracle_ancillary::PriceRequestAdded",
    "kind": "struct",
    "members": [
      {
        "name": "requester",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "identifier",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "time",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "ancillary_data",
        "type": "core::byte_array::ByteArray",
        "kind": "data"
      },
      {
        "name": "request_id",
        "type": "core::felt252",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "optimistic_oracle::contracts::mocks::oracle_ancillary::mock_oracle_ancillary::PushedPrice",
    "kind": "struct",
    "members": [
      {
        "name": "pusher",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "identifier",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "time",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "ancillary_data",
        "type": "core::byte_array::ByteArray",
        "kind": "data"
      },
      {
        "name": "price",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "request_id",
        "type": "core::felt252",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
    "kind": "struct",
    "members": [
      {
        "name": "class_hash",
        "type": "core::starknet::class_hash::ClassHash",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "Upgraded",
        "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
    "kind": "struct",
    "members": [
      {
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
    "kind": "struct",
    "members": [
      {
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "OwnershipTransferred",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
        "kind": "nested"
      },
      {
        "name": "OwnershipTransferStarted",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "optimistic_oracle::contracts::mocks::oracle_ancillary::mock_oracle_ancillary::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "PriceRequestAdded",
        "type": "optimistic_oracle::contracts::mocks::oracle_ancillary::mock_oracle_ancillary::PriceRequestAdded",
        "kind": "nested"
      },
      {
        "name": "PushedPrice",
        "type": "optimistic_oracle::contracts::mocks::oracle_ancillary::mock_oracle_ancillary::PushedPrice",
        "kind": "nested"
      },
      {
        "name": "UpgradeableEvent",
        "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
        "kind": "flat"
      },
      {
        "name": "OwnableEvent",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
        "kind": "flat"
      }
    ]
  }
]
